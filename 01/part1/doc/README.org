#+TITLE: README
#+AUTHOR: Michael Hunsinger
#+OPTIONS: toc:nil

* Summary
This file goes over how the compiler package and it's implementation are to be
used. This covers from start to end, including installation of Go, setting up
a workspace for the compiler, and compiling the files and running the program.

* Install Go
  Download the appropriate installation from Google's Go website,
  http://golang.org/doc/install, there is additional documentation located
  on website as well.

* Go's Workspace
  Extract files from the tarball into the desired location. Inside the root
  folder you will find four directories
  - =bin= compiled executables, along with sample micro program files
  - =doc= documentation
  - =pkg= package objects (the compiler package is located in here)
  - =src= source files
    - =compiler= source files pertaining to the compiler package
    - =main= source files pertaining to the main package (the driver file)
      
* Compiling Source Files
  There are two steps to compile and the executable; building the compiler
  package and then build the executable.
  #+BEGIN_SRC 
  $ cd ../01/src/compiler
  $ go build
  $ cd ../main
  $ go install
  #+END_SRC
  Now there is an executable in the =bin= folder.

* Running the Program
  You can run the executable that was compiled. Ensure you are in the directory
  where the =sample.micro= file is located.
  #+BEGIN_SRC 
  $ cd ../01/bin
  $ ./main
  #+END_SRC

* Sample Input and Output
  Input file =sample.micro=
  #+BEGIN_SRC
  BEGIN --SOMETHING UNUSUAL
     READ(A1, New_A, D, B);
     C:= A1 +(New_A - D) - 75;
     New_C:=((B - (7) + (C + D))) - (3 - A1); -- STUPID FORMULA
     WRITE(C, A1 + New_C);
     -- WHAT ABOUT := B + D;
  END
  #+END_SRC
  Output from =sample.micro=
  #+BEGIN_SRC
  BeginSym ReadSym LParen Id Comma Id Comma Id Comma Id RParen SemiColon Id 
  AssignOp Id PlusOp LParen Id MinusOp Id RParen MinusOp IntLiteral SemiColon
  Id AssignOp LParen LParen Id MinusOp LParen IntLiteral RParen PlusOp LParen
  Id PlusOp Id RParen RParen RParen MinusOp LParen IntLiteral MinusOp Id RParen
  SemiColon WriteSym LParen Id Comma Id PlusOp Id RParen SemiColon EndSym
  #+END_SRC
